# Zoomer Shell configuration (interactive shell)

export EDITOR=nvim

# History in cache directory:
export HISTSIZE=10000000
export SAVEHIST=10000000

export HISTFILE=~/.cache/zsh/history

export GLFW_IM_MODULE=ibus
export VK_ICD_FILENAMES=/usr/share/vulkan/icd.d/nvidia_icd.json
export ESPIDF=/opt/esp-idf
export PATH="/home/dantistnfs/.espressif/tools/xtensa-esp32-elf-clang/esp-13.0.0-20211203-x86_64-unknown-linux-gnu/bin/:$PATH"
export LIBCLANG_PATH="/home/dantistnfs/.espressif/tools/xtensa-esp32-elf-clang/esp-13.0.0-20211203-x86_64-unknown-linux-gnu/lib/"
export PIP_USER=no

export PATH="/home/dantistnfs/.cargo/bin:$PATH"
export PATH="/home/dantistnfs/.deno/bin:$PATH"
export PATH="/home/dantistnfs/.local/bin:$PATH"

# ZSH options
setopt histignoredups


# Load aliases
[ -f "${XDG_CONFIG_HOME:-$HOME/.config}/shell/aliasrc" ] && source "${XDG_CONFIG_HOME:-$HOME/.config}/shell/aliasrc"

if [[ `uname` == "Linux" ]]; then
    # move by words Ctrl + left/right arrow
    bindkey "^[[1;5C" forward-word
    bindkey "^[[1;5D" backward-word
elif [[ `uname` == "Darwin" ]]; then
    # move by words Ctrl + left/right arrow
    bindkey "^[^[[D" forward-word
    bindkey "^[^[[C" backward-word
else
    echo 'Unknown OS, some zsh shortcuts are undefined'
fi


### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk

zinit load zsh-users/zsh-autosuggestions
zinit load zdharma-continuum/fast-syntax-highlighting
zinit load zsh-users/zsh-completions


autoload -Uz compinit
compinit
zinit cdreplay -q # <- execute compdefs provided by rest of plugins

# >>> mamba initialize >>>
# !! Contents within this block are managed by 'mamba init' !!
export MAMBA_EXE="/usr/bin/micromamba";
export MAMBA_ROOT_PREFIX="/home/dantistnfs/micromamba";
__mamba_setup="$('/usr/bin/micromamba' shell hook --shell zsh --prefix '/home/dantistnfs/micromamba' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__mamba_setup"
else
    if [ -f "/home/dantistnfs/micromamba/etc/profile.d/micromamba.sh" ]; then
        . "/home/dantistnfs/micromamba/etc/profile.d/micromamba.sh"
    else
        export  PATH="/home/dantistnfs/micromamba/bin:$PATH"  # extra space after export prevents interference from conda init
    fi
fi
unset __mamba_setup
# <<< mamba initialize <<<
